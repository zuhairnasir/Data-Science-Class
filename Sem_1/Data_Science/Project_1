{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/zuhairnasir/Master-Data-Science-Analytics/blob/main/Sem_1/Data_Science/Project_1\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "d615eab9-bee2-4f59-b418-77b95d51e076",
      "metadata": {
        "id": "d615eab9-bee2-4f59-b418-77b95d51e076"
      },
      "source": [
        "## **Project 1 (STQD6014 Data Science)**\n",
        "\n",
        "\n"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "a20ce119-6a9f-4db3-ad5f-d6d453e5e239",
      "metadata": {
        "id": "a20ce119-6a9f-4db3-ad5f-d6d453e5e239"
      },
      "source": [
        "##### Muhammad Zuhair Afham Bin Mohd Nasir\n",
        "##### P153944"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "82ac1c10-1954-4672-9dbe-cc69ae0b3fcf",
      "metadata": {
        "id": "82ac1c10-1954-4672-9dbe-cc69ae0b3fcf"
      },
      "source": [
        "#### **Task 2 - Lists, Dictionaries & Looping**\n",
        "\n"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "def prod_manag_sys():\n",
        "  #initialize an empty dictionary\n",
        "  prod={}\n",
        "\n",
        "  #display options to user\n",
        "  def option():\n",
        "    print(\"\\nChoose your option:\")\n",
        "    print(\"Type '1' to 'Add' a new product\")\n",
        "    print(\"Type '2' to 'Update' a product's price or quantity\")\n",
        "    print(\"Type '3' to 'View' all products\")\n",
        "    print(\"Type '4' to 'Stop' the program\")\n",
        "\n",
        "  while True:\n",
        "    option()\n",
        "    choice=input(\"Enter your choice (1/2/3/4): \").strip()\n",
        "\n",
        "    if choice == \"1\":\n",
        "      #adding new product\n",
        "      prod_name = input(\"Enter product name: \").strip()\n",
        "      if prod_name in prod:\n",
        "        print(\"Product already exists\")\n",
        "      else:\n",
        "        try:\n",
        "          prod_price = float(input(\"Enter product price(RM): \"))\n",
        "          prod_qty = int(input(\"Enter the product quantity: \"))\n",
        "          prod[prod_name] = [prod_price, prod_qty]\n",
        "          print(\"Product added successfully\")\n",
        "        except ValueError:\n",
        "          print(\"Invalid input. Please enter a valid price and quantity.\")\n",
        "\n",
        "\n",
        "    elif choice == \"2\":\n",
        "      # Updating an existing product\n",
        "      prod_name = input(\"Enter the product name to update: \").strip()\n",
        "      if prod_name not in prod:\n",
        "        print(\"Product not found. Please add it first.\")\n",
        "      else:\n",
        "\n",
        "        try:\n",
        "          current_price = prod[prod_name][0]\n",
        "          current_qty = prod[prod_name][1]\n",
        "\n",
        "          new_price = float(input(\"Enter the new price (leave blank to keep current price): \") or prod[prod_name][0])\n",
        "          new_qty = int(input(\"Enter the new quantity (leave blank to keep current quantity): \") or prod[prod_name][1])\n",
        "          prod[prod_name] = [new_price, new_qty]\n",
        "          print(f\"Product '{prod_name}' updated successfully.\")\n",
        "        except ValueError:\n",
        "          print(\"Invalid price or quantity. Please enter numeric values.\")\n",
        "\n",
        "    elif choice == \"3\":\n",
        "      # Viewing all products\n",
        "      if not prod:\n",
        "        print(\"The inventory is empty.\")\n",
        "      else:\n",
        "        print(\"\\nCurrent Inventory:\")\n",
        "        print(f\"{'Product':<20}{'Price':<10}{'Quantity':<10}\")\n",
        "        print(\"-\" * 40)\n",
        "        for product, details in prod.items():\n",
        "          print(f\"{product:<20}{details[0]:<10.2f}{details[1]:<10}\")\n",
        "\n",
        "    elif choice == \"4\" or choice.lower() == \"stop\":\n",
        "      # Stopping the program\n",
        "      print(\"Exiting the program. Goodbye!\")\n",
        "      break\n",
        "\n",
        "    else:\n",
        "      # Invalid input handling\n",
        "      print(\"Invalid input. Please try again.\")\n",
        "\n"
      ],
      "metadata": {
        "id": "MuCW3y7U5UJT"
      },
      "id": "MuCW3y7U5UJT",
      "execution_count": 10,
      "outputs": []
    },
    {
      "cell_type": "code",
      "execution_count": 11,
      "id": "f7f56234-4860-458b-a169-4b41e7b27e75",
      "metadata": {
        "id": "f7f56234-4860-458b-a169-4b41e7b27e75",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "3f12406a-b15d-433f-bdbf-f9f1c4b5a433"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "Choose your option:\n",
            "Type '1' to 'Add' a new product\n",
            "Type '2' to 'Update' a product's price or quantity\n",
            "Type '3' to 'View' all products\n",
            "Type '4' to 'Stop' the program\n",
            "Enter your choice (1/2/3/4): 1\n",
            "Enter product name: Susu\n",
            "Enter product price(RM): 2\n",
            "Enter the product quantity: 2\n",
            "Product added successfully\n",
            "\n",
            "Choose your option:\n",
            "Type '1' to 'Add' a new product\n",
            "Type '2' to 'Update' a product's price or quantity\n",
            "Type '3' to 'View' all products\n",
            "Type '4' to 'Stop' the program\n",
            "Enter your choice (1/2/3/4): 2\n",
            "Enter the product name to update: Susu\n",
            "Enter the new price (leave blank to keep current price): \n",
            "Enter the new quantity (leave blank to keep current quantity): 3\n",
            "Product 'Susu' updated successfully.\n",
            "\n",
            "Choose your option:\n",
            "Type '1' to 'Add' a new product\n",
            "Type '2' to 'Update' a product's price or quantity\n",
            "Type '3' to 'View' all products\n",
            "Type '4' to 'Stop' the program\n",
            "Enter your choice (1/2/3/4): 3\n",
            "\n",
            "Current Inventory:\n",
            "Product             Price     Quantity  \n",
            "----------------------------------------\n",
            "Susu                2.00      3         \n",
            "\n",
            "Choose your option:\n",
            "Type '1' to 'Add' a new product\n",
            "Type '2' to 'Update' a product's price or quantity\n",
            "Type '3' to 'View' all products\n",
            "Type '4' to 'Stop' the program\n",
            "Enter your choice (1/2/3/4): 4\n",
            "Exiting the program. Goodbye!\n"
          ]
        }
      ],
      "source": [
        "prod_manag_sys()"
      ]
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "ZwYhWpmL5GM4"
      },
      "id": "ZwYhWpmL5GM4",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "execution_count": 4,
      "id": "01bbd79a-9e1d-43b9-a373-fce585ed798c",
      "metadata": {
        "id": "01bbd79a-9e1d-43b9-a373-fce585ed798c"
      },
      "outputs": [],
      "source": []
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "36325403-440e-4391-aa4e-e07bb2f9838a",
      "metadata": {
        "id": "36325403-440e-4391-aa4e-e07bb2f9838a"
      },
      "outputs": [],
      "source": []
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "94279ad5-2514-412f-b418-76800dbbac1f",
      "metadata": {
        "id": "94279ad5-2514-412f-b418-76800dbbac1f"
      },
      "outputs": [],
      "source": []
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "5c812bfd-49a0-473f-bf2a-5c63d675b0da",
      "metadata": {
        "id": "5c812bfd-49a0-473f-bf2a-5c63d675b0da"
      },
      "outputs": [],
      "source": []
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "46e6749d-68ad-4591-920f-31c7d5d8ebc0",
      "metadata": {
        "id": "46e6749d-68ad-4591-920f-31c7d5d8ebc0"
      },
      "outputs": [],
      "source": []
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "ac725e2e-ec56-4b83-a5be-dee751ba1395",
      "metadata": {
        "id": "ac725e2e-ec56-4b83-a5be-dee751ba1395"
      },
      "outputs": [],
      "source": []
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "80597e63-ebc6-4bbf-8b9f-61bfac898a5d",
      "metadata": {
        "id": "80597e63-ebc6-4bbf-8b9f-61bfac898a5d"
      },
      "outputs": [],
      "source": []
    }
  ],
  "metadata": {
    "kernelspec": {
      "display_name": "Python 3 (ipykernel)",
      "language": "python",
      "name": "python3"
    },
    "language_info": {
      "codemirror_mode": {
        "name": "ipython",
        "version": 3
      },
      "file_extension": ".py",
      "mimetype": "text/x-python",
      "name": "python",
      "nbconvert_exporter": "python",
      "pygments_lexer": "ipython3",
      "version": "3.12.4"
    },
    "colab": {
      "provenance": [],
      "include_colab_link": true
    }
  },
  "nbformat": 4,
  "nbformat_minor": 5
}